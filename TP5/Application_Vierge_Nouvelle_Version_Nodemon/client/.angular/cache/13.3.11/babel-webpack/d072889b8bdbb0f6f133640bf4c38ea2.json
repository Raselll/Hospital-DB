{"ast":null,"code":"// import { Component, OnInit } from \"@angular/core\";\n// import { Medecins } from \"../member.interface\";\n// @Component({\n//   selector: \"app-ajout\",\n//   templateUrl: \"./ajout.component.html\",\n//   styleUrls: [\"./ajout.component.css\"],\n// })\n// export class AjoutComponent implements OnInit {\n//   medecin: Medecins = {\n//     idMedecin: \"0\",\n//     prenom: \"Marie\",\n//     nom: \"Rousseau\",\n//     specialite: \"Dermatologie\",\n//     anneesExperience: \"8\",\n//     idService: \"3\",\n//   };\n//   medecinsAjoutes: Medecins[] = [];\n//   constructor() {}\n//   idMedecinInvalide: boolean = false;\n//   prenomInvalide: boolean = false;\n//   nomInvalide: boolean = false;\n//   annneesExperienceInvalide: boolean = false;\n//   formValide() {\n//     return (\n//       this.medecin.idMedecin &&\n//       this.medecin.prenom &&\n//       this.medecin.nom &&\n//       this.medecin.specialite &&\n//       this.medecin.anneesExperience &&\n//       this.medecin.idService\n//     );\n//   }\n//   validerNombre(event: KeyboardEvent, champ: string): void {\n//     const caractereValide = /[0-9]/;\n//     const inputChar = String.fromCharCode(event.charCode);\n//     const estValide = caractereValide.test(inputChar);\n//     let message = \"\";\n//     if (champ === \"idMedecin\") {\n//       this.idMedecinInvalide = !estValide;\n//       message =\n//         \"Veuillez entrer uniquement des chiffres pour l'identifiant du médecin.\";\n//     }\n//     if (!estValide) {\n//       event.preventDefault();\n//       alert(message);\n//     }\n//   }\n//   validerLettres(event: KeyboardEvent, champ: string): void {\n//     const pattern = /[a-zA-ZçéÇÉ]/;\n//     const inputChar = String.fromCharCode(event.charCode);\n//     const estValide = pattern.test(inputChar);\n//     let message = \"\";\n//     if (champ === \"prenom\") {\n//       this.prenomInvalide = !estValide;\n//       message = \"Veuillez entrer uniquement des lettres pour le prénom.\";\n//     } else if (champ === \"nom\") {\n//       this.nomInvalide = !estValide;\n//       message = \"Veuillez entrer uniquement des lettres pour le nom.\";\n//     }\n//     if (!estValide) {\n//       event.preventDefault();\n//       alert(message);\n//     }\n//   }\n//   ngOnInit(): void {\n//     const savedMedecins = localStorage.getItem(\"medecinsAjoutes\");\n//     if (savedMedecins) {\n//       this.medecinsAjoutes = JSON.parse(savedMedecins);\n//     }\n//   }\n//   ajouterMedecin(): void {\n//     const medecinsValides = [\n//       {\n//         idMedecin: 0,\n//         prenom: \"Marie\",\n//         nom: \"Rousseau\",\n//         specialite: \"Dermatologie\",\n//         anneesExperience: 8,\n//         idService: 3,\n//       },\n//       {\n//         idMedecin: 1,\n//         prenom: \"Philippe\",\n//         nom: \"Lemelin\",\n//         specialite: \"Neurologie\",\n//         anneesExperience: 6,\n//         idService: 4,\n//       },\n//       {\n//         idMedecin: 2,\n//         prenom: \"Valérie\",\n//         nom: \"Bélanger\",\n//         specialite: \"Ophtalmologie\",\n//         anneesExperience: 10,\n//         idService: 1,\n//       },\n//       {\n//         idMedecin: 3,\n//         prenom: \"Alex\",\n//         nom: \"Michaud\",\n//         specialite: \"Orthopédie\",\n//         anneesExperience: 12,\n//         idService: 2,\n//       },\n//       {\n//         idMedecin: 4,\n//         prenom: \"Nathalie\",\n//         nom: \"Gagné\",\n//         specialite: \"Psychiatrie\",\n//         anneesExperience: 9,\n//         idService: 3,\n//       },\n//       {\n//         idMedecin: 5,\n//         prenom: \"Simon\",\n//         nom: \"Tremblay\",\n//         specialite: \"Cardiologie\",\n//         anneesExperience: 15,\n//         idService: 4,\n//       },\n//       {\n//         idMedecin: 6,\n//         prenom: \"Audrey\",\n//         nom: \"Beaulieu\",\n//         specialite: \"Pédiatrie\",\n//         anneesExperience: 7,\n//         idService: 1,\n//       },\n//       {\n//         idMedecin: 7,\n//         prenom: \"David\",\n//         nom: \"Fournier\",\n//         specialite: \"Chirurgie\",\n//         anneesExperience: 11,\n//         idService: 2,\n//       },\n//       {\n//         idMedecin: 8,\n//         prenom: \"Isabelle\",\n//         nom: \"Lapointe\",\n//         specialite: \"Gynécologie\",\n//         anneesExperience: 14,\n//         idService: 3,\n//       },\n//       {\n//         idMedecin: 9,\n//         prenom: \"François\",\n//         nom: \"Martel\",\n//         specialite: \"Radiologie\",\n//         anneesExperience: 5,\n//         idService: 4,\n//       },\n//     ];\n//     const nouveauMedecin = {\n//       idMedecin: parseInt(this.medecin.idMedecin),\n//       prenom: this.medecin.prenom,\n//       nom: this.medecin.nom,\n//       specialite: this.medecin.specialite,\n//       anneesExperience: parseInt(this.medecin.anneesExperience),\n//       idService: parseInt(this.medecin.idService.split(\" \")[0]),\n//     };\n//     const nouveauMedecinId = parseInt(this.medecin.idMedecin);\n//     const medecinExiste = this.medecinsAjoutes.some(\n//       (medecin) => parseInt(medecin.idMedecin) === nouveauMedecinId\n//     );\n//     if (!medecinExiste) {\n//       const correspondance = medecinsValides.some(\n//         (medecinValide) =>\n//           JSON.stringify(medecinValide) === JSON.stringify(nouveauMedecin)\n//       );\n//       if (correspondance) {\n//         this.medecinsAjoutes.push({ ...this.medecin });\n//         this.medecin = {\n//           idMedecin: \"\",\n//           prenom: \"\",\n//           nom: \"\",\n//           specialite: \"\",\n//           anneesExperience: \"\",\n//           idService: \"\",\n//         };\n//       } else {\n//         alert(\n//           \"Les données du médecin à ajouter ne correspondent pas avec un médecin dans la base de données.\"\n//         );\n//       }\n//       localStorage.setItem(\n//         \"medecinsAjoutes\",\n//         JSON.stringify(this.medecinsAjoutes)\n//       );\n//     } else {\n//       alert(\"Ce médecin existe déjà dans la liste.\");\n//     }\n//   }\n// }","map":null,"metadata":{},"sourceType":"script"}