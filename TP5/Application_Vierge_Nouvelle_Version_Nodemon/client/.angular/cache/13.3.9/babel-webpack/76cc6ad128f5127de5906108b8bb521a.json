{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component } from '@angular/core';\nimport { CommunicationService } from '../services/communication.service';\nimport { ActivatedRoute, Router } from '@angular/router'; // import { Medecins } from '../member.interface';\n\nlet ModificationComponent = class ModificationComponent {\n  constructor(formBuilder, communicationService, route, router) {\n    this.formBuilder = formBuilder;\n    this.communicationService = communicationService;\n    this.route = route;\n    this.router = router;\n    this.medecins = [];\n  }\n\n  ngOnInit() {\n    this.medecinForm = this.formBuilder.group({\n      idMedecin: ['', Validators.required],\n      prenom: ['', Validators.required],\n      nom: ['', Validators.required],\n      specialite: ['', Validators.required],\n      anneesExperience: ['', Validators.required],\n      idService: ['', Validators.required]\n    }); // Récupérer l'ID du médecin à partir de la route si vous utilisez le routing\n\n    this.idMedecin = this.route.snapshot.params['id'];\n    this.loadMedecinData(this.idMedecin);\n  }\n\n  loadMedecinData(id) {\n    this.communicationService.getMedecinById(id).subscribe(medecin => {\n      this.medecinForm.patchValue(medecin);\n    }, error => {\n      console.error('Erreur lors de la récupération des données du médecin', error);\n    });\n  }\n\n  onSubmit() {\n    if (this.medecinForm.valid) {\n      this.communicationService.modifierMedecin(this.medecinForm.value).subscribe(() => {\n        console.log('Médecin modifié avec succès'); // Rediriger vers la liste des médecins ou ailleurs\n\n        this.router.navigate(['/medecins']);\n      }, error => {\n        console.error('Erreur lors de la modification du médecin', error);\n      });\n    }\n  }\n\n};\nModificationComponent = __decorate([Component({\n  selector: 'app-modification',\n  templateUrl: './modification.component.html',\n  styleUrls: ['./modification.component.css']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof FormBuilder !== \"undefined\" && FormBuilder) === \"function\" ? _a : Object, CommunicationService, ActivatedRoute, Router])], ModificationComponent);\nexport { ModificationComponent };","map":null,"metadata":{},"sourceType":"module"}